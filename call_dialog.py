import sys
from PyQt5 import QtWidgets, QtCore, QtGui
import pyaudio
import threading
import socket
import json
import time
import os
from screen_sharing_window import ScreenSharingWindow


class CallDialog(QtWidgets.QDialog):
    call_ended = QtCore.pyqtSignal(int)  # –°–∏–≥–Ω–∞–ª —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∑–≤–æ–Ω–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    call_accepted = QtCore.pyqtSignal()
    call_rejected = QtCore.pyqtSignal()
    mic_muted = QtCore.pyqtSignal(bool)  # –°–∏–≥–Ω–∞–ª –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
    speaker_muted = QtCore.pyqtSignal(bool)  # –°–∏–≥–Ω–∞–ª –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–≤—É–∫–∞

    def __init__(self, username, friend_name, is_caller=True, parent=None):
        super().__init__(parent)
        self.username = username
        self.friend_name = friend_name
        self.is_caller = is_caller
        self.is_call_active = False
        self.screen_sharing_window = None
        self.is_screen_sharing = False
        self.is_mic_muted = False
        self.is_speaker_muted = False
        self.is_camera_on = False
        self.call_start_time = None
        self.call_duration = 0
        self.parent = parent  # —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –µ–≥–æ –º–µ—Ç–æ–¥–∞–º

        self.setWindowTitle("–ó–≤–æ–Ω–æ–∫")
        self.resize(400, 300)
        self.setStyleSheet("background-color: #d9d9d9; border-radius: 10px;")

        # –û—Å–Ω–æ–≤–Ω–æ–π –º–∞–∫–µ—Ç
        self.layout = QtWidgets.QVBoxLayout(self)
        self.layout.setContentsMargins(20, 20, 20, 20)
        self.layout.setSpacing(15)

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        self.back_btn = QtWidgets.QPushButton("‚Üê")
        self.back_btn.setFixedSize(30, 30)
        self.back_btn.setStyleSheet("""
            background-color: #333333;
            color: white;
            border-radius: 15px;
            font-size: 16px;
            font-weight: bold;
        """)
        self.back_btn.clicked.connect(self.close)

        back_layout = QtWidgets.QHBoxLayout()
        back_layout.addWidget(self.back_btn)
        back_layout.addStretch()
        self.layout.addLayout(back_layout)

        # –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.avatar_frame = QtWidgets.QFrame()
        self.avatar_frame.setFixedSize(80, 80)
        self.avatar_frame.setStyleSheet("background-color: #4CAF50; border-radius: 40px; border: none;")

        avatar_layout = QtWidgets.QVBoxLayout(self.avatar_frame)
        avatar_layout.setContentsMargins(0, 0, 0, 0)

        self.avatar_icon = QtWidgets.QLabel()
        self.avatar_icon.setAlignment(QtCore.Qt.AlignCenter)
        self.avatar_icon.setStyleSheet("border: none; background: transparent;")
        self.avatar_icon.setText("üë§")
        self.avatar_icon.setFont(QtGui.QFont("Arial", 30))
        avatar_layout.addWidget(self.avatar_icon)

        avatar_container = QtWidgets.QHBoxLayout()
        avatar_container.addStretch()
        avatar_container.addWidget(self.avatar_frame)
        avatar_container.addStretch()
        self.layout.addLayout(avatar_container)

        # –ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥ load_user_avatar
        if hasattr(parent, 'connection') and hasattr(parent, 'load_user_avatar'):
            has_avatar = parent.load_user_avatar(friend_name, self.avatar_icon, self.avatar_frame)
            if has_avatar:
                self.avatar_frame.setStyleSheet("background-color: transparent; border-radius: 40px;")

        # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.name_label = QtWidgets.QLabel(self.friend_name)
        self.name_label.setAlignment(QtCore.Qt.AlignCenter)
        self.name_label.setFont(QtGui.QFont("Arial", 16, QtGui.QFont.Bold))
        self.name_label.setStyleSheet("color: #333333;")
        self.layout.addWidget(self.name_label)

        # –°—Ç–∞—Ç—É—Å –∑–≤–æ–Ω–∫–∞
        self.status_label = QtWidgets.QLabel()
        self.status_label.setAlignment(QtCore.Qt.AlignCenter)
        self.status_label.setFont(QtGui.QFont("Arial", 12))
        self.status_label.setStyleSheet("color: #666666;")
        self.layout.addWidget(self.status_label)

        # –¢–∞–π–º–µ—Ä –∑–≤–æ–Ω–∫–∞
        self.timer_label = QtWidgets.QLabel("00:00")
        self.timer_label.setAlignment(QtCore.Qt.AlignCenter)
        self.timer_label.setFont(QtGui.QFont("Arial", 14))
        self.timer_label.setStyleSheet("color: #333333;")
        self.timer_label.hide()  # –°–∫—Ä—ã—Ç—å –¥–æ –Ω–∞—á–∞–ª–∞ –∑–≤–æ–Ω–∫–∞
        self.layout.addWidget(self.timer_label)

        # –ò–∫–æ–Ω–∫–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
        self.mic_icon = QtWidgets.QLabel()
        self.mic_icon.setAlignment(QtCore.Qt.AlignCenter)
        self.mic_icon.setText("üé§")
        self.mic_icon.setFont(QtGui.QFont("Arial", 16))
        self.layout.addWidget(self.mic_icon)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–≤–æ–Ω–∫–∞
        self.call_btn_frame = QtWidgets.QFrame()
        self.call_btn_frame.setFixedSize(60, 60)
        self.call_btn_frame.setStyleSheet("background-color: #FF5252; border-radius: 30px; border: none;")

        call_btn_layout = QtWidgets.QVBoxLayout(self.call_btn_frame)
        call_btn_layout.setContentsMargins(0, 0, 0, 0)

        call_icon = QtWidgets.QLabel()
        call_icon.setAlignment(QtCore.Qt.AlignCenter)
        call_icon.setStyleSheet("border: none;")
        call_icon.setText("üìû")
        call_icon.setFont(QtGui.QFont("Arial", 24))
        call_btn_layout.addWidget(call_icon)

        call_btn_container = QtWidgets.QHBoxLayout()
        call_btn_container.addStretch()
        call_btn_container.addWidget(self.call_btn_frame)
        call_btn_container.addStretch()
        self.layout.addLayout(call_btn_container)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤–æ–Ω–∫–æ–º - —Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –Ω–∏—Ö
        self.controls_container = QtWidgets.QWidget()
        self.controls_layout = QtWidgets.QHBoxLayout(self.controls_container)
        self.controls_layout.setSpacing(10)
        self.controls_layout.setAlignment(QtCore.Qt.AlignCenter)

        # –ö–Ω–æ–ø–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∞
        self.screen_btn = self.create_control_button("üì∫", "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —ç–∫—Ä–∞–Ω–∞")
        self.screen_btn.clicked.connect(self.toggle_screen_sharing)
        self.controls_layout.addWidget(self.screen_btn)

        # –ö–Ω–æ–ø–∫–∞ –∑–≤—É–∫–∞
        self.sound_btn = self.create_control_button("üîä", "–ó–≤—É–∫")
        self.sound_btn.clicked.connect(self.toggle_speaker)
        self.controls_layout.addWidget(self.sound_btn)

        # –ö–Ω–æ–ø–∫–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
        self.mic_btn = self.create_control_button("üé§", "–ú–∏–∫—Ä–æ—Ñ–æ–Ω")
        self.mic_btn.clicked.connect(self.toggle_microphone)
        self.controls_layout.addWidget(self.mic_btn)

        self.layout.addWidget(self.controls_container)

        # –ö–Ω–æ–ø–∫–∏ –ø—Ä–∏–Ω—è—Ç—å/–æ—Ç–∫–ª–æ–Ω–∏—Ç—å –¥–ª—è –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞
        self.answer_container = QtWidgets.QWidget()
        self.answer_layout = QtWidgets.QHBoxLayout(self.answer_container)
        self.answer_layout.setSpacing(20)
        self.answer_layout.setAlignment(QtCore.Qt.AlignCenter)

        # –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–Ω—è—Ç—å –∑–≤–æ–Ω–æ–∫
        self.accept_btn = QtWidgets.QPushButton()
        self.accept_btn.setFixedSize(60, 60)
        self.accept_btn.setStyleSheet("background-color: #4CAF50; border-radius: 30px;")
        accept_layout = QtWidgets.QVBoxLayout(self.accept_btn)
        accept_layout.setContentsMargins(0, 0, 0, 0)
        accept_icon = QtWidgets.QLabel("üìû")
        accept_icon.setAlignment(QtCore.Qt.AlignCenter)
        accept_icon.setFont(QtGui.QFont("Arial", 24))
        accept_layout.addWidget(accept_icon)
        self.accept_btn.clicked.connect(self.accept_call)

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–≤–æ–Ω–æ–∫
        self.reject_btn = QtWidgets.QPushButton()
        self.reject_btn.setFixedSize(60, 60)
        self.reject_btn.setStyleSheet("background-color: #FF5252; border-radius: 30px;")
        reject_layout = QtWidgets.QVBoxLayout(self.reject_btn)
        reject_layout.setContentsMargins(0, 0, 0, 0)
        reject_icon = QtWidgets.QLabel("üìû")
        reject_icon.setAlignment(QtCore.Qt.AlignCenter)
        reject_icon.setFont(QtGui.QFont("Arial", 24))
        reject_layout.addWidget(reject_icon)
        self.reject_btn.clicked.connect(self.reject_call)

        self.answer_layout.addWidget(self.accept_btn)
        self.answer_layout.addWidget(self.reject_btn)

        self.layout.addWidget(self.answer_container)

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∑–≤–æ–Ω–∫–∞
        if is_caller:
            # –ò—Å—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫
            self.status_label.setText("–í—ã–∑–æ–≤...")
            self.answer_container.hide()  # –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–Ω—è—Ç—å/–æ—Ç–∫–ª–æ–Ω–∏—Ç—å
            self.controls_container.hide()  # –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ –Ω–∞—á–∞–ª–∞ –∑–≤–æ–Ω–∫–∞
            self.call_btn_frame.mousePressEvent = lambda event: self.end_call()
        else:
            # –í—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫
            self.status_label.setText("–í—Ö–æ–¥—è—â–∏–π –≤—ã–∑–æ–≤")
            self.call_btn_frame.hide()  # –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            self.controls_container.hide()  # –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è

        # –¢–∞–π–º–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–≤–æ–Ω–∫–∞
        self.call_timer = QtCore.QTimer(self)
        self.call_timer.timeout.connect(self.update_call_duration)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
        self.finished.connect(self.on_dialog_closed)

    def create_control_button(self, icon_text, tooltip):
        """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤–æ–Ω–∫–æ–º"""
        btn = QtWidgets.QPushButton()
        btn.setFixedSize(50, 50)
        btn.setStyleSheet("""
        background-color: #e0e0e0; 
        border-radius: 25px; 
        border: 1px solid #999;
    """)
        btn.setToolTip(tooltip)

        layout = QtWidgets.QVBoxLayout(btn)
        layout.setContentsMargins(0, 0, 0, 0)

        icon = QtWidgets.QLabel(icon_text)
        icon.setAlignment(QtCore.Qt.AlignCenter)
        icon.setFont(QtGui.QFont("Arial", 16))
        layout.addWidget(icon)

        return btn

    def toggle_microphone(self):
        """–í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞"""
        self.is_mic_muted = not self.is_mic_muted
        if self.is_mic_muted:
            self.mic_btn.setStyleSheet("background-color: #FF5252; border-radius: 25px; border: 1px solid #999;")
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –æ–Ω –≤—ã–∫–ª—é—á–µ–Ω
            self.mic_icon.setText("üé§‚ùå")
        else:
            self.mic_btn.setStyleSheet("background-color: #e0e0e0; border-radius: 25px; border: 1px solid #999;")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—É—é –∏–∫–æ–Ω–∫—É –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
            self.mic_icon.setText("üé§")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
        self.mic_muted.emit(self.is_mic_muted)

    def toggle_speaker(self):
        """–í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞"""
        self.is_speaker_muted = not self.is_speaker_muted
        if self.is_speaker_muted:
            self.sound_btn.setStyleSheet("background-color: #FF5252; border-radius: 25px; border: 1px solid #999;")
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∑–≤—É–∫–∞
            child = self.sound_btn.findChild(QtWidgets.QLabel)
            if child:
                child.setText("üîá")
        else:
            self.sound_btn.setStyleSheet("background-color: #e0e0e0; border-radius: 25px; border: 1px solid #999;")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∑–≤—É–∫–∞
            child = self.sound_btn.findChild(QtWidgets.QLabel)
            if child:
                child.setText("üîä")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–≤—É–∫–∞
        self.speaker_muted.emit(self.is_speaker_muted)

    def toggle_camera(self):
        """–í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã"""
        self.is_camera_on = not self.is_camera_on
        if self.is_camera_on:
            self.camera_btn.setStyleSheet("background-color: #4CAF50; border-radius: 25px; border: 1px solid #999;")
        else:
            self.camera_btn.setStyleSheet("background-color: #e0e0e0; border-radius: 25px; border: 1px solid #999;")

    def toggle_screen_sharing(self):
        """–í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∞ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"""
        self.is_screen_sharing = not self.is_screen_sharing

        if self.is_screen_sharing:
            # –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —ç–∫—Ä–∞–Ω–∞
            self.screen_btn.setStyleSheet("background-color: #4CAF50; border-radius: 25px; border: 1px solid #999;")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ –Ω–∞—á–∞–ª–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            if hasattr(self.parent, 'client') and hasattr(self.parent.client, 'call_recipient'):
                self.parent.client.send_screen_control_signal("start")

                # –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∞
                self.screen_sharing_window = ScreenSharingWindow(
                    self.username,
                    self.parent.client.call_recipient,
                    is_sender=True,
                    parent=self
                )
                self.screen_sharing_window.start_sharing(self.parent.client.get_screen_socket())
                self.screen_sharing_window.show()
        else:
            # –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —ç–∫—Ä–∞–Ω–∞
            self.screen_btn.setStyleSheet("background-color: #e0e0e0; border-radius: 25px; border: 1px solid #999;")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            if hasattr(self.parent, 'client'):
                self.parent.client.send_screen_control_signal("stop")

            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∞
            if self.screen_sharing_window:
                self.screen_sharing_window.close()
                self.screen_sharing_window = None

    def accept_call(self):
        """–ü—Ä–∏–Ω—è—Ç—å –≤—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫"""
        self.is_call_active = True
        self.answer_container.hide()
        self.call_btn_frame.show()
        self.controls_container.show()
        self.status_label.setText("–ó–≤–æ–Ω–æ–∫ –Ω–∞—á–∞–ª—Å—è")

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –∑–≤–æ–Ω–∫–∞
        self.call_start_time = time.time()
        self.timer_label.show()
        self.call_timer.start(1000)  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–≤–æ–Ω–∫–∞ –¥–ª—è –ø—Ä–∏–Ω–∏–º–∞—é—â–µ–≥–æ
        self.call_btn_frame.mousePressEvent = lambda event: self.end_call()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–≤–æ–Ω–∫–∞
        self.call_accepted.emit()

    def call_was_accepted(self):
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø—Ä–∏–Ω—è–ª –∑–≤–æ–Ω–æ–∫"""
        self.is_call_active = True
        self.status_label.setText("–ó–≤–æ–Ω–æ–∫ –Ω–∞—á–∞–ª—Å—è")
        self.controls_container.show()

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –∑–≤–æ–Ω–∫–∞
        self.call_start_time = time.time()
        self.timer_label.show()
        self.call_timer.start(1000)  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É

    def reject_call(self):
        """–û—Ç–∫–ª–æ–Ω–∏—Ç—å –≤—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫"""
        self.call_rejected.emit()
        self.close()

    def end_call(self):
        """–ó–∞–≤–µ—Ä—à–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∑–≤–æ–Ω–æ–∫"""
        if self.is_call_active:
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
            self.call_timer.stop()
            # –í—ã—á–∏—Å–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–≤–æ–Ω–∫–∞
            self.call_duration = int(time.time() - self.call_start_time)
        else:
            # –ï—Å–ª–∏ –∑–≤–æ–Ω–æ–∫ –Ω–µ –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å 0
            self.call_duration = 0

        # –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —ç–∫—Ä–∞–Ω–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–≤–æ–Ω–∫–∞
        if self.is_screen_sharing:
            self.toggle_screen_sharing()

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã mute
        self.is_mic_muted = False
        self.is_speaker_muted = False
        self.mic_muted.emit(False)  # –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç –æ —Å–±—Ä–æ—Å–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
        self.speaker_muted.emit(False)  # –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç –æ —Å–±—Ä–æ—Å–µ –∑–≤—É–∫–∞

        self.is_call_active = False
        self.call_ended.emit(self.call_duration)
        self.close()

    def update_call_duration(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–≤–æ–Ω–∫–∞"""
        if self.call_start_time:
            duration = int(time.time() - self.call_start_time)
            minutes = duration // 60
            seconds = duration % 60
            self.timer_label.setText(f"{minutes:02d}:{seconds:02d}")
            self.call_duration = duration

    def on_dialog_closed(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞"""
        self.call_timer.stop()
        if self.is_call_active:
            self.end_call()
        else:
            # –ï—Å–ª–∏ –∑–≤–æ–Ω–æ–∫ –Ω–µ –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω, –Ω–æ –¥–∏–∞–ª–æ–≥ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª —Å –Ω—É–ª–µ–≤–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
            self.call_ended.emit(0)


class GroupCallDialog:
    """–î–∏–∞–ª–æ–≥ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –∑–≤–æ–Ω–∫–∞"""

    def __init__(self, group_data, username, client, parent=None):
        self.group_data = group_data
        self.username = username
        self.client = client
        self.parent = parent
        self.participants = set()
        self.is_in_call = False
        self.is_mic_muted = False
        self.is_speaker_muted = False
        self.audio_started = False
        self.audio_active = False
        self.is_screen_sharing = False
        self.screen_sharing_window = None

        # –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –∑–≤–æ–Ω–∫–∞
        self.dialog = QtWidgets.QDialog(parent)
        self.dialog.setWindowTitle(f"–ì—Ä—É–ø–ø–æ–≤–æ–π –∑–≤–æ–Ω–æ–∫ - {group_data['name']}")
        self.dialog.resize(400, 500)
        self.setup_ui()

    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –∑–≤–æ–Ω–∫–∞"""
        layout = QtWidgets.QVBoxLayout(self.dialog)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≥—Ä—É–ø–ø—ã
        title = QtWidgets.QLabel(f"üé§ {self.group_data['name']}")
        title.setAlignment(QtCore.Qt.AlignCenter)
        title.setFont(QtGui.QFont("Arial", 16, QtGui.QFont.Bold))
        layout.addWidget(title)

        # –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∑–≤–æ–Ω–∫–∞
        self.participants_label = QtWidgets.QLabel("–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∑–≤–æ–Ω–∫–∞:")
        self.participants_label.setFont(QtGui.QFont("Arial", 12, QtGui.QFont.Bold))
        layout.addWidget(self.participants_label)

        self.participants_list = QtWidgets.QListWidget()
        self.participants_list.setMaximumHeight(150)
        layout.addWidget(self.participants_list)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        controls_layout = QtWidgets.QHBoxLayout()

        # –ö–Ω–æ–ø–∫–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
        self.mic_btn = QtWidgets.QPushButton("üé§")
        self.mic_btn.setFixedSize(50, 50)
        self.mic_btn.setStyleSheet("background-color: #4CAF50; border-radius: 25px;")
        self.mic_btn.clicked.connect(self.toggle_microphone)
        controls_layout.addWidget(self.mic_btn)

        # –ö–Ω–æ–ø–∫–∞ –∑–≤—É–∫–∞
        self.speaker_btn = QtWidgets.QPushButton("üîä")
        self.speaker_btn.setFixedSize(50, 50)
        self.speaker_btn.setStyleSheet("background-color: #4CAF50; border-radius: 25px;")
        self.speaker_btn.clicked.connect(self.toggle_speaker)
        controls_layout.addWidget(self.speaker_btn)

        # –ö–Ω–æ–ø–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∞
        self.screen_btn = QtWidgets.QPushButton("üì∫")
        self.screen_btn.setFixedSize(50, 50)
        self.screen_btn.setStyleSheet("background-color: #e0e0e0; border-radius: 25px;")
        self.screen_btn.setToolTip("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —ç–∫—Ä–∞–Ω–∞")
        self.screen_btn.clicked.connect(self.toggle_group_screen_sharing)
        controls_layout.addWidget(self.screen_btn)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–≤–æ–Ω–∫–∞
        self.end_btn = QtWidgets.QPushButton("üìû")
        self.end_btn.setFixedSize(50, 50)
        self.end_btn.setStyleSheet("background-color: #FF5252; border-radius: 25px;")
        self.end_btn.clicked.connect(self.leave_call)
        controls_layout.addWidget(self.end_btn)

        layout.addLayout(controls_layout)

    def start_group_call_audio(self):
        """–ó–∞–ø—É—Å–∫ –∞—É–¥–∏–æ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –∑–≤–æ–Ω–∫–∞"""
        if not self.audio_started:
            self.client.start_group_call_audio(self.group_data['id'])
            self.audio_started = True
            print(f"[GROUP CALL] Started audio for group {self.group_data['name']}")

    def stop_group_call_audio(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞—É–¥–∏–æ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –∑–≤–æ–Ω–∫–∞"""
        if self.audio_started:
            self.client.stop_group_call_audio()
            self.audio_started = False
            print(f"[GROUP CALL] Stopped audio for group {self.group_data['name']}")

    def toggle_group_screen_sharing(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —ç–∫—Ä–∞–Ω–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º –∑–≤–æ–Ω–∫–µ"""
        self.is_screen_sharing = not self.is_screen_sharing

        if self.is_screen_sharing:
            # –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã
            self.screen_btn.setStyleSheet("background-color: #4CAF50; border-radius: 25px;")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–æ–∫–µ—Ç
            signal = f"GROUP_SCREEN_CONTROL:start:{self.group_data['id']}:{self.username}:{time.time()}"
            self.client.send_message(signal)
            print(f"[GROUP SCREEN] Sent start signal: {signal}")

            # –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∞
            from screen_sharing_window import ScreenSharingWindow
            self.screen_sharing_window = ScreenSharingWindow(
                self.username,
                f"–ì—Ä—É–ø–ø–∞: {self.group_data['name']}",
                is_sender=True,
                parent=self.dialog
            )

            # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è –≥—Ä—É–ø–ø—ã
            self.screen_sharing_window.start_group_sharing(
                self.client.get_screen_socket(),
                self.group_data['id']
            )
            self.screen_sharing_window.show()

        else:
            # –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —ç–∫—Ä–∞–Ω–∞
            self.screen_btn.setStyleSheet("background-color: #e0e0e0; border-radius: 25px;")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
            signal = f"GROUP_SCREEN_CONTROL:stop:{self.group_data['id']}:{self.username}:{time.time()}"
            self.client.send_message(signal)
            print(f"[GROUP SCREEN] Sent stop signal: {signal}")

            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∞
            if self.screen_sharing_window:
                self.screen_sharing_window.close()
                self.screen_sharing_window = None

    def update_participants(self, participants_list):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∑–≤–æ–Ω–∫–∞"""
        self.participants = set(participants_list)
        self.participants_list.clear()

        for participant in sorted(participants_list):
            item = QtWidgets.QListWidgetItem(f"üé§ {participant}")
            if participant == self.username:
                item.setText(f"üé§ {participant} (–≤—ã)")
                item.setBackground(QtGui.QColor(200, 255, 200))
            self.participants_list.addItem(item)

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        count = len(participants_list)
        self.participants_label.setText(f"–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∑–≤–æ–Ω–∫–∞ ({count}):")

    def toggle_microphone(self):
        """–ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞"""
        self.is_mic_muted = not self.is_mic_muted
        if self.is_mic_muted:
            self.mic_btn.setStyleSheet("background-color: #FF5252; border-radius: 25px;")
            self.mic_btn.setText("üé§‚ùå")
            print(f"[GROUP CALL] Microphone MUTED for {self.username}")
        else:
            self.mic_btn.setStyleSheet("background-color: #4CAF50; border-radius: 25px;")
            self.mic_btn.setText("üé§")
            print(f"[GROUP CALL] Microphone UNMUTED for {self.username}")

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
        if hasattr(self.client, 'set_mic_muted'):
            self.client.set_mic_muted(self.is_mic_muted)

    def toggle_speaker(self):
        """–ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞"""
        self.is_speaker_muted = not self.is_speaker_muted
        if self.is_speaker_muted:
            self.speaker_btn.setStyleSheet("background-color: #FF5252; border-radius: 25px;")
            self.speaker_btn.setText("üîá")
            print(f"[GROUP CALL] Speaker MUTED for {self.username}")
        else:
            self.speaker_btn.setStyleSheet("background-color: #4CAF50; border-radius: 25px;")
            self.speaker_btn.setText("üîä")
            print(f"[GROUP CALL] Speaker UNMUTED for {self.username}")

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–≤—É–∫–∞
        if hasattr(self.client, 'set_speaker_muted'):
            self.client.set_speaker_muted(self.is_speaker_muted)

    def leave_call(self):
        if self.is_screen_sharing:
            self.toggle_group_screen_sharing()
        if self.is_in_call:
            print(f"[GROUP CALL] {self.username} leaving call in group {self.group_data['name']}")

            # –°–Ω–∞—á–∞–ª–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—É–¥–∏–æ
            if hasattr(self.client, 'stop_group_call_audio'):
                self.client.stop_group_call_audio()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ –≤—ã—Ö–æ–¥–µ
            signal = f"GROUP_CALL_SIGNAL:leave:{self.group_data['id']}:{self.username}:{time.time()}"
            self.client.send_message(signal)

            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Ñ–ª–∞–≥–∏ –∑–≤–æ–Ω–∫–∞
            self.client.is_in_call = False
            self.client.is_in_group_call = False
            self.client.current_group_call_id = None

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã mute
        self.is_mic_muted = False
        self.is_speaker_muted = False
        if hasattr(self.client, 'set_mic_muted'):
            self.client.set_mic_muted(False)  # –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç –æ —Å–±—Ä–æ—Å–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
        if hasattr(self.client, 'set_speaker_muted'):
            self.client.set_speaker_muted(False)  # –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç –æ —Å–±—Ä–æ—Å–µ –∑–≤—É–∫–∞

        self.is_in_call = False
        self.dialog.close()

    def show(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥"""
        self.dialog.show()

    def close(self):
        """–ó–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥"""
        self.leave_call()